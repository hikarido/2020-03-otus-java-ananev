/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package hw08.mygson;

import javax.json.Json;
import javax.json.JsonObjectBuilder;
import org.glassfish.json.api.*;

import java.lang.reflect.Field;
import java.util.logging.Level;
import java.util.logging.Logger;

public class MyGson {
    static Logger logger = Logger.getLogger(MyGson.class.getName());

    static {
        logger.setLevel(Level.INFO);
    }

    public static String toJson(Object instance) {
        System.out.println(MyGson.class.getName());
        JsonObjectBuilder builder = Json.createObjectBuilder();
        if(instance == null){
            return builder.addNull(instance.getClass().getName()).toString();
        }
        Class<?> instanceClass = instance.getClass();
        Field[] fields = instanceClass.getDeclaredFields();
        for(Field fieldDescriptor: fields){
            fieldDescriptor.setAccessible(true);
            if(fieldDescriptor.getType().isArray()){
                logger.log(Level.INFO, fieldDescriptor.getName() + " []");
            }
            else if(fieldDescriptor.getType().isPrimitive()){
                logger.log(Level.INFO, fieldDescriptor.getName() + " P");
            }
            else {
                logger.log(Level.INFO, fieldDescriptor.getName() + " C");
            }
        }
        return "{}";
    }
}
